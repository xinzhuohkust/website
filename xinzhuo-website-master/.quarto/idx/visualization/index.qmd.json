{"title":"Visualization","markdown":{"yaml":{"page-layout":"full","comments":false,"title":"Visualization","subtitle":"With data from the real world","citation":{"author":"Huang Xinzhuo"},"date-modified":"last-modified","date":"Nov 21, 2023"},"headingText":"Surveillance","containsRefs":false,"markdown":"\n\n<br>\n\n\nIn China, there are 2,734,921 companies related to surveillance, and our web scraper has recorded their detailed information.\n```{r}\n#| out-width: 100%\n#| eval: false\nrequire(pacman)\np_load(showtext, ggspatial, viridis, scales, tidyverse, sf, fasterize, stars)\n\nfont_add(\"Proxima\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Proxima Nova Extrabold.ttf\")\nfont_add(\"Proxima Head\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Publico Headline Web Bold.ttf\")\n\nshowtext_auto()\n\ncolors <- c(\n    \"#1380A1\",\n    \"#edae49\",\n    \"#66a182\",\n    \"#2e4057\",\n    \"#8d96a3\",\n    \"#d1495b\"\n)\n\nggplot() +\n    geom_sf(data = data_plot, aes(geometry = geometry, fill = total), color = \"#FFFFFF\") +\n    geom_sf(data = part4, aes(geometry = geometry), fill = NA, color = \"#2e4057\", size = 3) +\n    ggthemes::theme_map() +\n    viridis::scale_fill_viridis(\n        option = \"A\",\n        name = \"Companies \\nrelated to surveillance\",\n        alpha = 0.8,\n        begin = 0,\n        end = 0.9,\n        direction = -1, # dark is lowest, yellow is highest\n        guide = guide_legend(\n            keyheight = unit(5, units = \"mm\"),\n            title.position = \"top\",\n            reverse = FALSE,\n            title.theme = element_text(family = \"Proxima Head\")\n        )\n    ) +\n    annotation_scale(\n        location = \"tl\",\n        bar_cols = c(\"grey60\", \"white\"),\n        text_family = \"Proxima Head\"\n    ) +\n    annotation_north_arrow(\n        location = \"tl\",\n        which_north = \"true\",\n        pad_x = unit(0.1, \"in\"),\n        pad_y = unit(1.0, \"in\"),\n        style = ggspatial::north_arrow_nautical(\n            fill = c(\"grey40\", \"white\"),\n            line_col = \"grey20\",\n            text_family = \"Proxima Head\",\n            text_size = 4\n        )\n    ) +\n    theme(\n        legend.position = c(0.82, 0.3),\n        legend.key.size = unit(1, units = \"cm\"),\n        legend.text = element_text(family = \"Proxima Head\", size = 10),\n        legend.margin = margin(t = 0, r = 10, b = 0, l = 0),\n        plot.margin = margin(t = 10, r = 10, b = -30, l = 10, unit = \"pt\"),\n        plot.title = element_text(family = \"Proxima Head\", face = \"bold\", size = 8),\n        plot.subtitle = element_text(family = \"Proxima\", size = 10)\n    ) +\n    ggtitle(\"Geographic Distribution of Surveillance Companies Across China\")\n```\n\n```{r}\n#| echo: false\n#| out-width: 100%\n#| fig-height: 8\n#| fig-width: 10\nreadr::read_rds(\"E:/OneDrive - HKUST Connect/personal website/main/visualization/data/surveillance.Rds\")\n```\n\n<br>\n<br>\n\n# Propaganda During the Shanghai Lockdown\n\nThe street-level distribution of propaganda which is based on approximately 90,000 WeChat posts from grassroots governments during the Shanghai lockdown\n\n```{r}\n#| eval: false\n#------------------------------------------------------------------------------\ncountry <- read_rds(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\阿里全国地图.Rds\") %>%\n    filter(name != \"\") %>%\n    st_transform(crs = \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\")\n\ntarget_province <- filter(country, name == \"上海市\")\n\ntarget_bbox <- st_bbox(target_province)\n\nX_expand <- (target_bbox$xmax - target_bbox$xmin) * 0.3\nY_expand <- (target_bbox$ymax - target_bbox$ymin) * 0.3\n\ntarget_bbox_expanded <- target_bbox + c(-X_expand, -Y_expand, X_expand, Y_expand)\n\ntarget_expanded <- st_as_sfc(st_bbox(target_bbox_expanded), crs = st_crs(target_province))\n\nneighbors <- country %>%\n    filter(st_intersects(st_geometry(.), target_expanded, sparse = FALSE) |> map_lgl(1, any))\n\nwith_neighbors <- st_crop(neighbors, target_expanded)\n\n# ------------------------------------------------------------------------------\nchina <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\国界\\\\国家矢量.shp\")\n\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\") %>%\n    st_transform(\"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\")\n\nlon_min <- 82\nlon_max <- 126\nlat_min <- 0\nlat_max <- 55\n\nbbox <- st_bbox(c(xmin = lon_min, xmax = lon_max, ymin = lat_min, ymax = lat_max), crs = st_crs(4326))\n\nsp_bbox <- bbox %>%\n    st_as_sfc() %>%\n    st_as_sf()\n\nbounds_proj <- st_transform(sp_bbox, \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\")\n\nxmin <- min(st_coordinates(bounds_proj)[, 1])\nxmax <- max(st_coordinates(bounds_proj)[, 1])\nymin <- min(st_coordinates(bounds_proj)[, 2])\nymax <- max(st_coordinates(bounds_proj)[, 2])\n\nbase_map <- ggplot() +\n    geom_sf(\n        data = world,\n        linetype = \"solid\",\n        colour = \"#FFFFFF\",\n        linewidth = 0.4\n    ) +\n    geom_sf(\n        data = country,\n        linetype = \"solid\",\n        colour = \"#8d96a3\",\n        linewidth = 0.7\n    ) +\n    geom_sf(\n        data = target_province,\n        fill = \"#edae49\"\n    ) +\n    geom_sf(\n        data = target_expanded, fill = NA, color = \"#d1495b\",\n        linetype = \"solid\",\n        linewidth = 0.7\n    ) +\n    coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n    ggthemes::theme_map() +\n    scale_fill_viridis(\n        option = \"magma\",\n        name = \"Number \\n of posts\",\n        alpha = 0.8,\n        begin = 0,\n        end = 0.9,\n        direction = -1, # dark is lowest, yellow is highest\n        guide = guide_legend(\n            keyheight = unit(5, units = \"mm\"),\n            title.position = \"top\",\n            reverse = TRUE,\n            title.theme = element_text(family = \"Proxima Head\")\n        )\n    ) +\n    annotation_scale(\n    location = \"tl\",\n    bar_cols = c(\"grey60\", \"white\"),\n    text_family = \"Proxima Head\"\n  ) +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\"),\n    legend.position = \"right\",\n    legend.key.size = unit(10, units = \"mm\"),\n    legend.text = element_text(family = \"Proxima Head\"),\n    legend.margin = margin(t = 0, r = 10, b = 0, l = 0)\n  )\n\n# ------------------------------------------------------------------------------\nggplot() +\n    geom_sf(data = with_neighbors) +\n    geom_sf(data = st_transform(post_map, \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\"), aes(fill = count), linewidth = 0.4, size = 0.1) +\n    geom_sf(\n        data = shanghai_district,\n        aes(geometry = geometry),\n        alpha = 0,\n        linetype = \"solid\",\n        colour = \"#FFFFFF\",\n        linewidth = 0.7\n    ) +\n    ggthemes::theme_map() +\n    scale_fill_viridis(\n        option = \"magma\",\n        name = \"Number \\n of posts\",\n        alpha = 0.8,\n        begin = 0,\n        end = 0.9,\n        direction = -1, # dark is lowest, yellow is highest\n        guide = guide_legend(\n            keyheight = unit(5, units = \"mm\"),\n            title.position = \"top\",\n            reverse = TRUE,\n            title.theme = element_text(family = \"Proxima Head\")\n        )\n    ) +\n    annotation_scale(\n        location = \"tl\",\n        bar_cols = c(\"grey60\", \"white\"),\n        text_family = \"Proxima Head\"\n    ) +\n    annotation_north_arrow(\n        location = \"tl\",\n        which_north = \"true\",\n        pad_x = unit(0.1, \"in\"),\n        pad_y = unit(1.0, \"in\"),\n        style = ggspatial::north_arrow_nautical(\n            fill = c(\"grey40\", \"white\"),\n            line_col = \"grey20\",\n            text_family = \"Proxima Head\"\n        )\n    ) +\n    theme(\n        legend.position = \"right\",\n        legend.key.size = unit(10, units = \"mm\"),\n        legend.text = element_text(family = \"Proxima Head\"),\n        legend.margin = margin(t = 0, r = 10, b = 0, l = 0)\n    )\n```\n\n```{r}\n#| echo: false\n#| out-width: 100%\n#| fig-height: 9.9\n#| fig-width: 18\nrequire(pacman)\np_load(readr, patchwork)\n\nshanghai <- read_rds(\"E:\\\\OneDrive - HKUST Connect\\\\Phd\\\\图片和pdf/post_map.Rds\")\nChina <- read_rds(\"E:/OneDrive - HKUST Connect/personal website/main/visualization/data/base_map.Rds\")\n\nChina + shanghai + plot_layout(ncol = 2)\n```\n\n```{r}\n#| eval: false\n#| echo: false\np_load(terra)\nnight_light <- rast(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\第三方数据\\\\夜间灯光\\\\DMSP-like2022.tif\") %>% \n    aggregate(fact = 5)\n\ncrop(night_light, country)\n\nnight <- ggplot() +\n  geom_tile(data = tibble(as.data.frame(raster_masked, xy = TRUE, na.rm = TRUE)), aes(x = x, y = y, fill =  `DMSP-like2022`)) +\n  coord_equal() +\n  scale_fill_viridis_c() +\n  geom_sf(data = china, fill = NA, color = \"#FFFFFF\") +\n  ggthemes::theme_map()\n\nwrite_rds(night, \"data/night.Rds\")\n\ngetwd()\n\nchina <- china %>%\n    st_transform(crs(night_light))\nchina <- country %>%\n    st_transform(crs(night_light))\n\ncropped_raster <- crop(night_light, china)\n\nraster_masked <- mask(cropped_raster, china)\n\n# raster_polygons <- rasterToPolygons(cropped_raster, na.rm = TRUE)\n\nstars_obj <- stars::st_as_stars(cropped_raster)\n\nprovince <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\2023年省级\\\\2023年省级.shp\")\n\nnight <- ggplot() +\n  geom_stars(data = stars_obj) +\n  geom_sf(data = province, fill = NA, color = \"#FFFFFF\") +\n  scale_fill_viridis_c() +\n  ggthemes::theme_map()\n\nlibrary(terra)\n\n# 将RasterLayer转换为SpatRaster\nrast <- rast(cropped_raster)\n# 转换为矢量（等效于rasterToPolygons）\nvect <- as.polygons(rast)\n\n# 现在vect是一个SpatVector对象，您可以将它转换为sf对象\nsf_polygons <- st_as_sf(vect)\n\n# 使用ggplot2绘制sf对象\nggplot() +\n  geom_sf(data=sf_polygons) +\n  scale_fill_viridis_c() +\n  theme_minimal() +\n  coord_sf()\n```\n\n```{r}\n#| echo: false\n#| eval: false\nrequire(pacman)\np_load(showtext, ggspatial, viridis, scales, tidyverse, sf, rnaturalearthdata, rnaturalearth, patchwork, ggsflabel)\n\nfont_add(\"Proxima\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Proxima Nova Extrabold.ttf\")\nfont_add(\"Proxima Head\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Publico Headline Web Bold.ttf\")\n\nalbers_proj <- \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\" %>%\n    st_crs()\n\njilin_albers_proj_string <- \"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs\" %>%\n    st_crs()\n\ncountry <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\国界\\\\国家矢量.shp\")\nprovince <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\2023年省级\\\\2023年省级.shp\")\ncity <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\2023年地级/2023年地级.shp\")\n\njilin <- province %>%\n    filter(省 == \"上海市\") %>%\n    st_transform(albers_proj)\n\njilin <- province %>%\n    filter(省 == \"上海市\") %>%\n    st_transform(crs = \"+proj=utm +zone=51 +north +datum=WGS84\")\n\njilin_bbox <- st_bbox(jilin)\n\nX_expand <- (jilin_bbox$xmax - jilin_bbox$xmin) * 0.1\nY_expand <- (jilin_bbox$ymax - jilin_bbox$ymin) * 0.1\n\njilin_bbox_expanded <- jilin_bbox + c(-X_expand, -Y_expand, X_expand, Y_expand)\n\njilin_expanded <- st_as_sfc(st_bbox(jilin_bbox_expanded), crs = st_crs(jilin))\n\nneighbors <- province %>%\n    st_transform(crs = st_crs(jilin_expanded)) %>%\n    filter(st_intersects(st_geometry(.), jilin_expanded, sparse = FALSE) |> map_lgl(1, any))\n\nbase_jilin <- st_crop(neighbors, jilin_expanded)\n\njilin_city <- city %>%\n    filter(省级 == \"吉林省\") %>%\n    st_transform(albers_proj)\n\njilin_with_neighbors <- ggplot() +\n    geom_sf(data = province)\n    geom_sf(data = base_jilin, fill = \"white\", color = \"black\") +\n    geom_sf(data = jilin_city) +\n     geom_sf_label_repel(\n        data = jilin_city,\n        aes(label = ENG_NAME),\n        family = \"Proxima\",\n        #fontface = \"bold\",\n        colour = \"#FFFFFF\",\n        fill = \"#555665\",\n        size = 2\n    ) +\n    theme_void()\n\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\") %>%\n    st_transform(albers_proj)\n\nbounds_proj <- st_transform(sp_bbox, albers_proj)\n\nchina <- ggplot() +\n    geom_sf(data = world, fill = \"white\", color = \"black\") +\n    geom_sf(\n        data = st_transform(country, albers_proj)\n    ) +\n    geom_sf(data = st_transform(province, albers_proj)) +\n    geom_sf(data = jilin, fill = \"red\") +\n    geom_sf(data = jilin_expanded, fill = NA, color = \"green\") +\n    ggthemes::theme_map() +\n    coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n    theme(panel.background = element_rect(fill = \"lightblue\"))\n    \n\nfinal <- china + jilin_with_neighbors + plot_layout(ncol = 2)\n\nggsave(\"test.pdf\", final, dpi = 300)\n```\n\n\n## Pocket Crimes\n\n\"Pocket crimes\" is broadly defined and ambiguously worded that authorities can apply it to almost any activity they deem undesirable. Draw on my [policing data](https://xinzhuo.work/data/penality/), I found that detentions under the pretext of \"picking quarrels and provoking trouble\" are becoming increasingly severe.\n\n```{r}\n#| eval: false\nggplot(data_plot) +\n    geom_point(aes(date, mean, color = group), shape = 19, size = 3) +\n    geom_line(aes(date, mean, color = group), size = 1) +\n    scale_x_date(date_breaks = \"6 month\", date_labels = \"%Y-%m\") +\n    geom_rect(\n        data = tibble(\n            xmin = as.Date(c(\"2018-05-1\")),\n            xmax = as.Date(c(\"2019-11-15\")),\n            ymin = -Inf,\n            ymax = Inf\n        ),\n        aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),\n        fill = \"grey\", alpha = 0.3\n    ) +\n    scale_color_manual(\n        values = colors[c(1, 2)]\n    ) +\n    xlab(\"\") +\n    ylab(\"Average Detention Time (in days)\") +\n    ggthemes::theme_hc(base_size = 15) +\n    guides(\n        # color = guide_legend(title = \"\")\n    ) +\n    geom_hline(yintercept = 4.3, linetype = \"longdash\", color = \"#555555\", size = 1) +\n    geom_label(\n        data = tibble(date = ymd(\"2020-02-01\"), mean = 3.87, label = \"Average detention length \\nfor all charges is 4.3 days\"),\n        aes(date, mean, label = label),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#555555\",\n        fill = \"white\",\n        label.size = NA,\n        size = 4\n    ) +\n    geom_label(\n        data = tibble(date = ymd(\"2018-06-01\"), mean = 7.8, label = \"Prior to the \\nCOVID-19 pandemic\"),\n        aes(date, mean, label = label),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#555555\",\n        fill = NA,\n        alpha = 0.3,\n        label.size = NA,\n        size = 6\n    ) +\n    geom_curve(\n        aes(x = ymd(\"2020-12-01\"), xend = ymd(\"2021-01-14\"), y = 4, yend = 4.3),\n        colour = \"#555555\",\n        size = 0.5,\n        curvature = -0.2,\n        arrow = arrow(length = unit(0.03, \"npc\"))\n    ) +\n    geom_label(\n        aes(x = ymd(\"2021-02-01\"), y = 7.2, label = \"Picking Quarrels and Provoking Trouble\"),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#edae49\",\n        fill = \"white\",\n        alpha = 0.3,\n        label.size = NA,\n        size = 6\n    ) +\n    geom_label(\n        aes(x = ymd(\"2021-02-01\"), y = 5.5, label = \"Disrupt Order in a Public Place\"),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#1380A1\",\n        fill = \"white\",\n        alpha = 0.3,\n        label.size = NA,\n        size = 6\n    ) +\n    theme(\n        legend.position = \"none\",\n        axis.text = element_text(\n            family = \"Proxima Head\",\n            color = \"#555665\",\n            size = 15\n        ),\n        axis.title.y = element_text(\n            family = \"Proxima Head\",\n        ),\n        legend.text = element_text(family = \"Proxima Head\")\n    )\n```\n\n![](png/detention.png)\n\n<br>\n<br>\n\n```{r}\n#| echo: false\n#| eval: false\nrequire(\"pacman\")\np_load(palmerpenguins, tidyverse, reactablefmtr, BiocManager, dataui, htmltools, reactable, jsonlite, anomalize, tippy, plotly)\n\ntheme <- reactableTheme(\n    headerStyle = list(\n      \"&:hover[aria-sort]\" = list(background = \"hsl(0, 0%, 96%)\"),\n      \"&[aria-sort='ascending'], &[aria-sort='descending']\" = list(background = \"hsl(0, 0%, 96%)\"),\n      borderColor = \"#555\"\n  )\n)\n```\n\n<br>\n\n## Trending Topics\nWe have recorded every minute of hotness data for over 400,000 hot searches appearing on China's Weibo (akin to Twitter) trending list (100 million data points). Let's take a look at how does an authoritarian government react when news unfavorable to it appears on trending lists.\n\n```{r}\n#| eval: false\ndata <- read_rds(\"E:\\\\OneDrive - HKUST Connect\\\\weibohot\\\\河南_乌鲁木齐.Rds\") %>%\n    mutate(`start time` = as.POSIXct(start_time, origin = \"1970-01-01\") |> format(\"%Y-%m-%d %H:%M:%S\")) %>%\n    unnest(trend) %>%\n    group_nest(title, `trending score`, `start time`, file) %>%\n    mutate(\n        data = map(data, ~ arrange(., time)),\n        trend = map(data, ~ pull(., star))\n    ) %>%\n    select(-data) %>%\n    arrange(-`trending score`) %>%\n    mutate(\n        users = map(file, ~ pluck(., 1) |>\n            fromJSON() |>\n            pluck(\"data\", \"media_info\", \"users\")),\n        users = map(users, ~ select(., name, location, verified))\n    )\n\nusers <- data %>%\n    select(users, title) %>%\n    unnest()\n\nreactable(\n    select(data, -file, -users),\n    searchable = TRUE,\n    theme = nytimes(),\n    columns = list(\n        title = colDef(maxWidth = 90, vAlign = \"center\"),\n        `trending score` = colDef(maxWidth = 80, vAlign = \"center\"),\n        `start time` = colDef(maxWidth = 120, vAlign = \"center\"),\n        trend = colDef(\n            minWidth = 150,\n            cell = react_sparkline(\n                data,\n                labels = c(\"max\"),\n                highlight_points = highlight_points(max = \"red\"),\n                height = 80,\n                statline = \"mean\",\n                tooltip_type = 2\n            )\n        )\n    ),\n    details = colDef(\n        name = \"top media\",\n        minWidth = 80,\n        details = function(index) {\n            users <- users[users$title == data$title[index], ]\n\n            htmltools::div(\n                style = \"padding: 1rem\",\n                reactable(users, outlined = TRUE)\n            )\n        }\n    )\n)\n```\n\n```{r}\n#| echo: false\nread_rds(\"E:/OneDrive - HKUST Connect/personal website/main/visualization/data/table_weibo.Rds\")\n```\n<br>\n<br>\n\n## Divided World\nPerceptions of the United States and China in value surveys. Data comes from a [report by Centre for the Future of Democracy](https://www.bennettinstitute.cam.ac.uk/publications/a-world-divided/).\n\n```{r}\n#| eval: false\nsurvey_crack <- ggplot(\n    data_2,\n    aes(\n        `pro China`,\n        `pro USA`, ,\n        color = label,\n        size = frequency,\n        label = country_name\n    )\n) +\n    geom_point(\n        alpha = 0.64, stroke = 2\n    ) +\n    scale_color_manual(values = c(\"#d1495b\", \"#5f9ea0\"), labels = c(\"Positive View of China\", \"Positive View of the United States\")) +\n    scale_size_continuous(range = c(2, 49)) +\n    geom_abline(slope = 1, intercept = 0, size = 1.6, linetype = \"dashed\", colour = \"#ffffff\") +\n    geom_text_repel(\n        color = \"#333333\",\n        box.padding = unit(1, \"lines\"),\n        segment.size = 0.25,\n        size = 15,\n        family = \"techmono\"\n    ) +\n    theme_minimal() +\n    scale_y_continuous(position = \"right\") +\n    theme(\n        text = element_text(family = \"heebo\"),\n        legend.position = \"bottom\",\n        plot.margin = margin(t = 0, r = 5, b = 8, l = 0, unit = \"pt\"),\n        plot.background = element_rect(fill = \"#E0E0E0\", color = NA),\n        axis.title = element_blank(),\n        axis.text = element_text(size = 20, color = \"#555665\", family = \"Proxima Head\"),\n        legend.title = element_blank(),\n        legend.text = element_text(size = 25, color = \"#555665\", family = \"Proxima Head\"),\n        legend.justification = c(\"center\")\n    ) +\n    guides(\n        size = \"none\",\n        guide_legend(title = \"none\"),\n        color = guide_legend(reverse = TRUE, nrow = 2)\n    )\n\nsurvey_crack <- ggdraw() +\n    draw_plot(survey_crack) +\n    draw_image(\"china_us_30.png\", x = 0.11, y = -0.25, width = 0.4, scale = 0.89)\n```\n\n![](png/survey_crack_tets.png)\n\n```{r}\n#| eval: false\nggplot(\n    worldtilegrid,\n    aes(xmin = x, ymin = y, xmax = x + 1, ymax = y + 1, fill = label)\n) +\n    geom_rect(color = \"#ffffff\", size = 0.1) +\n    geom_text(\n        aes(x = x, y = y, label = alpha.3),\n        color = \"#555665\",\n        nudge_x = 0.5,\n        nudge_y = -0.5,\n        size = 10,\n        family = \"Proxima Head\",\n        filter(worldtilegrid, label == \"pro china\")\n    ) +\n    geom_rect_pattern(\n        data = filter(worldtilegrid, alpha.3 == \"CHN\"),\n        pattern_filename = \"https://upload.wikimedia.org/wikipedia/commons/f/fa/Flag_of_the_People%27s_Republic_of_China.svg\",\n        pattern = \"image\",\n        pattern_type = \"squish\"\n    ) +\n    geom_rect_pattern(\n        data = filter(worldtilegrid, alpha.3 == \"USA\"),\n        pattern_filename = \"https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/1920px-Flag_of_the_United_States.svg.png\",\n        pattern = \"image\",\n        pattern_type = \"squish\"\n    ) +\n    geom_text(\n        aes(x = x, y = y, label = alpha.3),\n        color = \"#E0E0E0\",\n        nudge_x = 0.5,\n        nudge_y = -0.5,\n        size = 10,\n        family = \"Proxima Head\",\n        filter(worldtilegrid, label == \"not pro china\" & alpha.3 != \"USA\")\n    ) +\n    geom_rect_pattern(\n        data = filter(worldtilegrid, is.na(label)),\n        fill = \"#ffffff\",\n        colour = \"#a9a9a9\",\n        pattern_density = 0.45,\n        pattern_fill = \"#a9a9a9\",\n        pattern_colour = \"#ffffff\"\n    ) +\n    scale_y_reverse() +\n    theme_minimal() +\n    theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_blank(),\n        legend.position = \"none\",\n        legend.text = element_text(family = \"Proxima Head\"),\n        legend.title = element_blank(),\n        legend.key.width = unit(0.5, \"cm\"),\n        plot.background = element_rect(fill = \"#E0E0E0\", color = NA)\n    ) +\n    scale_fill_manual(values = c(\"#2e4057\", \"#edae49\"), labels = c(\"not pro China\", \"pro China\")) +\n    annotate(\"text\",\n        x = 6, y = c(19, 20, 21),\n        label = c(\"pro China\", \"not pro China\", \"not included\"),\n        size = 12, hjust = 0,\n        family = \"Proxima\", color = c(\"#edae49\", \"#2e4057\", \"#a9a9a9\")\n    ) +\n    annotate(\"point\", x = 5.7, y = c(19.05, 20.05, 21.05), pch = c(15, 15, 15), size = 4, color = c(\"#edae49\", \"#2e4057\", \"#a9a9a9\"))\n```\n\n![](png/survey_index_revised.png)","srcMarkdownNoYaml":"\n\n<br>\n\n## Surveillance\n\nIn China, there are 2,734,921 companies related to surveillance, and our web scraper has recorded their detailed information.\n```{r}\n#| out-width: 100%\n#| eval: false\nrequire(pacman)\np_load(showtext, ggspatial, viridis, scales, tidyverse, sf, fasterize, stars)\n\nfont_add(\"Proxima\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Proxima Nova Extrabold.ttf\")\nfont_add(\"Proxima Head\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Publico Headline Web Bold.ttf\")\n\nshowtext_auto()\n\ncolors <- c(\n    \"#1380A1\",\n    \"#edae49\",\n    \"#66a182\",\n    \"#2e4057\",\n    \"#8d96a3\",\n    \"#d1495b\"\n)\n\nggplot() +\n    geom_sf(data = data_plot, aes(geometry = geometry, fill = total), color = \"#FFFFFF\") +\n    geom_sf(data = part4, aes(geometry = geometry), fill = NA, color = \"#2e4057\", size = 3) +\n    ggthemes::theme_map() +\n    viridis::scale_fill_viridis(\n        option = \"A\",\n        name = \"Companies \\nrelated to surveillance\",\n        alpha = 0.8,\n        begin = 0,\n        end = 0.9,\n        direction = -1, # dark is lowest, yellow is highest\n        guide = guide_legend(\n            keyheight = unit(5, units = \"mm\"),\n            title.position = \"top\",\n            reverse = FALSE,\n            title.theme = element_text(family = \"Proxima Head\")\n        )\n    ) +\n    annotation_scale(\n        location = \"tl\",\n        bar_cols = c(\"grey60\", \"white\"),\n        text_family = \"Proxima Head\"\n    ) +\n    annotation_north_arrow(\n        location = \"tl\",\n        which_north = \"true\",\n        pad_x = unit(0.1, \"in\"),\n        pad_y = unit(1.0, \"in\"),\n        style = ggspatial::north_arrow_nautical(\n            fill = c(\"grey40\", \"white\"),\n            line_col = \"grey20\",\n            text_family = \"Proxima Head\",\n            text_size = 4\n        )\n    ) +\n    theme(\n        legend.position = c(0.82, 0.3),\n        legend.key.size = unit(1, units = \"cm\"),\n        legend.text = element_text(family = \"Proxima Head\", size = 10),\n        legend.margin = margin(t = 0, r = 10, b = 0, l = 0),\n        plot.margin = margin(t = 10, r = 10, b = -30, l = 10, unit = \"pt\"),\n        plot.title = element_text(family = \"Proxima Head\", face = \"bold\", size = 8),\n        plot.subtitle = element_text(family = \"Proxima\", size = 10)\n    ) +\n    ggtitle(\"Geographic Distribution of Surveillance Companies Across China\")\n```\n\n```{r}\n#| echo: false\n#| out-width: 100%\n#| fig-height: 8\n#| fig-width: 10\nreadr::read_rds(\"E:/OneDrive - HKUST Connect/personal website/main/visualization/data/surveillance.Rds\")\n```\n\n<br>\n<br>\n\n# Propaganda During the Shanghai Lockdown\n\nThe street-level distribution of propaganda which is based on approximately 90,000 WeChat posts from grassroots governments during the Shanghai lockdown\n\n```{r}\n#| eval: false\n#------------------------------------------------------------------------------\ncountry <- read_rds(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\阿里全国地图.Rds\") %>%\n    filter(name != \"\") %>%\n    st_transform(crs = \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\")\n\ntarget_province <- filter(country, name == \"上海市\")\n\ntarget_bbox <- st_bbox(target_province)\n\nX_expand <- (target_bbox$xmax - target_bbox$xmin) * 0.3\nY_expand <- (target_bbox$ymax - target_bbox$ymin) * 0.3\n\ntarget_bbox_expanded <- target_bbox + c(-X_expand, -Y_expand, X_expand, Y_expand)\n\ntarget_expanded <- st_as_sfc(st_bbox(target_bbox_expanded), crs = st_crs(target_province))\n\nneighbors <- country %>%\n    filter(st_intersects(st_geometry(.), target_expanded, sparse = FALSE) |> map_lgl(1, any))\n\nwith_neighbors <- st_crop(neighbors, target_expanded)\n\n# ------------------------------------------------------------------------------\nchina <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\国界\\\\国家矢量.shp\")\n\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\") %>%\n    st_transform(\"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\")\n\nlon_min <- 82\nlon_max <- 126\nlat_min <- 0\nlat_max <- 55\n\nbbox <- st_bbox(c(xmin = lon_min, xmax = lon_max, ymin = lat_min, ymax = lat_max), crs = st_crs(4326))\n\nsp_bbox <- bbox %>%\n    st_as_sfc() %>%\n    st_as_sf()\n\nbounds_proj <- st_transform(sp_bbox, \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\")\n\nxmin <- min(st_coordinates(bounds_proj)[, 1])\nxmax <- max(st_coordinates(bounds_proj)[, 1])\nymin <- min(st_coordinates(bounds_proj)[, 2])\nymax <- max(st_coordinates(bounds_proj)[, 2])\n\nbase_map <- ggplot() +\n    geom_sf(\n        data = world,\n        linetype = \"solid\",\n        colour = \"#FFFFFF\",\n        linewidth = 0.4\n    ) +\n    geom_sf(\n        data = country,\n        linetype = \"solid\",\n        colour = \"#8d96a3\",\n        linewidth = 0.7\n    ) +\n    geom_sf(\n        data = target_province,\n        fill = \"#edae49\"\n    ) +\n    geom_sf(\n        data = target_expanded, fill = NA, color = \"#d1495b\",\n        linetype = \"solid\",\n        linewidth = 0.7\n    ) +\n    coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n    ggthemes::theme_map() +\n    scale_fill_viridis(\n        option = \"magma\",\n        name = \"Number \\n of posts\",\n        alpha = 0.8,\n        begin = 0,\n        end = 0.9,\n        direction = -1, # dark is lowest, yellow is highest\n        guide = guide_legend(\n            keyheight = unit(5, units = \"mm\"),\n            title.position = \"top\",\n            reverse = TRUE,\n            title.theme = element_text(family = \"Proxima Head\")\n        )\n    ) +\n    annotation_scale(\n    location = \"tl\",\n    bar_cols = c(\"grey60\", \"white\"),\n    text_family = \"Proxima Head\"\n  ) +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\"),\n    legend.position = \"right\",\n    legend.key.size = unit(10, units = \"mm\"),\n    legend.text = element_text(family = \"Proxima Head\"),\n    legend.margin = margin(t = 0, r = 10, b = 0, l = 0)\n  )\n\n# ------------------------------------------------------------------------------\nggplot() +\n    geom_sf(data = with_neighbors) +\n    geom_sf(data = st_transform(post_map, \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\"), aes(fill = count), linewidth = 0.4, size = 0.1) +\n    geom_sf(\n        data = shanghai_district,\n        aes(geometry = geometry),\n        alpha = 0,\n        linetype = \"solid\",\n        colour = \"#FFFFFF\",\n        linewidth = 0.7\n    ) +\n    ggthemes::theme_map() +\n    scale_fill_viridis(\n        option = \"magma\",\n        name = \"Number \\n of posts\",\n        alpha = 0.8,\n        begin = 0,\n        end = 0.9,\n        direction = -1, # dark is lowest, yellow is highest\n        guide = guide_legend(\n            keyheight = unit(5, units = \"mm\"),\n            title.position = \"top\",\n            reverse = TRUE,\n            title.theme = element_text(family = \"Proxima Head\")\n        )\n    ) +\n    annotation_scale(\n        location = \"tl\",\n        bar_cols = c(\"grey60\", \"white\"),\n        text_family = \"Proxima Head\"\n    ) +\n    annotation_north_arrow(\n        location = \"tl\",\n        which_north = \"true\",\n        pad_x = unit(0.1, \"in\"),\n        pad_y = unit(1.0, \"in\"),\n        style = ggspatial::north_arrow_nautical(\n            fill = c(\"grey40\", \"white\"),\n            line_col = \"grey20\",\n            text_family = \"Proxima Head\"\n        )\n    ) +\n    theme(\n        legend.position = \"right\",\n        legend.key.size = unit(10, units = \"mm\"),\n        legend.text = element_text(family = \"Proxima Head\"),\n        legend.margin = margin(t = 0, r = 10, b = 0, l = 0)\n    )\n```\n\n```{r}\n#| echo: false\n#| out-width: 100%\n#| fig-height: 9.9\n#| fig-width: 18\nrequire(pacman)\np_load(readr, patchwork)\n\nshanghai <- read_rds(\"E:\\\\OneDrive - HKUST Connect\\\\Phd\\\\图片和pdf/post_map.Rds\")\nChina <- read_rds(\"E:/OneDrive - HKUST Connect/personal website/main/visualization/data/base_map.Rds\")\n\nChina + shanghai + plot_layout(ncol = 2)\n```\n\n```{r}\n#| eval: false\n#| echo: false\np_load(terra)\nnight_light <- rast(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\第三方数据\\\\夜间灯光\\\\DMSP-like2022.tif\") %>% \n    aggregate(fact = 5)\n\ncrop(night_light, country)\n\nnight <- ggplot() +\n  geom_tile(data = tibble(as.data.frame(raster_masked, xy = TRUE, na.rm = TRUE)), aes(x = x, y = y, fill =  `DMSP-like2022`)) +\n  coord_equal() +\n  scale_fill_viridis_c() +\n  geom_sf(data = china, fill = NA, color = \"#FFFFFF\") +\n  ggthemes::theme_map()\n\nwrite_rds(night, \"data/night.Rds\")\n\ngetwd()\n\nchina <- china %>%\n    st_transform(crs(night_light))\nchina <- country %>%\n    st_transform(crs(night_light))\n\ncropped_raster <- crop(night_light, china)\n\nraster_masked <- mask(cropped_raster, china)\n\n# raster_polygons <- rasterToPolygons(cropped_raster, na.rm = TRUE)\n\nstars_obj <- stars::st_as_stars(cropped_raster)\n\nprovince <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\2023年省级\\\\2023年省级.shp\")\n\nnight <- ggplot() +\n  geom_stars(data = stars_obj) +\n  geom_sf(data = province, fill = NA, color = \"#FFFFFF\") +\n  scale_fill_viridis_c() +\n  ggthemes::theme_map()\n\nlibrary(terra)\n\n# 将RasterLayer转换为SpatRaster\nrast <- rast(cropped_raster)\n# 转换为矢量（等效于rasterToPolygons）\nvect <- as.polygons(rast)\n\n# 现在vect是一个SpatVector对象，您可以将它转换为sf对象\nsf_polygons <- st_as_sf(vect)\n\n# 使用ggplot2绘制sf对象\nggplot() +\n  geom_sf(data=sf_polygons) +\n  scale_fill_viridis_c() +\n  theme_minimal() +\n  coord_sf()\n```\n\n```{r}\n#| echo: false\n#| eval: false\nrequire(pacman)\np_load(showtext, ggspatial, viridis, scales, tidyverse, sf, rnaturalearthdata, rnaturalearth, patchwork, ggsflabel)\n\nfont_add(\"Proxima\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Proxima Nova Extrabold.ttf\")\nfont_add(\"Proxima Head\", \"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\可视化\\\\Publico Headline Web Bold.ttf\")\n\nalbers_proj <- \"+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\" %>%\n    st_crs()\n\njilin_albers_proj_string <- \"+proj=tmerc +lat_0=0 +lon_0=123 +k=1 +x_0=500000 +y_0=0 +ellps=krass +units=m +no_defs\" %>%\n    st_crs()\n\ncountry <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\国界\\\\国家矢量.shp\")\nprovince <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\2023年省级\\\\2023年省级.shp\")\ncity <- st_read(\"E:\\\\OneDrive - HKUST Connect\\\\dataverse\\\\shpfile\\\\1.2\\\\2023年地级/2023年地级.shp\")\n\njilin <- province %>%\n    filter(省 == \"上海市\") %>%\n    st_transform(albers_proj)\n\njilin <- province %>%\n    filter(省 == \"上海市\") %>%\n    st_transform(crs = \"+proj=utm +zone=51 +north +datum=WGS84\")\n\njilin_bbox <- st_bbox(jilin)\n\nX_expand <- (jilin_bbox$xmax - jilin_bbox$xmin) * 0.1\nY_expand <- (jilin_bbox$ymax - jilin_bbox$ymin) * 0.1\n\njilin_bbox_expanded <- jilin_bbox + c(-X_expand, -Y_expand, X_expand, Y_expand)\n\njilin_expanded <- st_as_sfc(st_bbox(jilin_bbox_expanded), crs = st_crs(jilin))\n\nneighbors <- province %>%\n    st_transform(crs = st_crs(jilin_expanded)) %>%\n    filter(st_intersects(st_geometry(.), jilin_expanded, sparse = FALSE) |> map_lgl(1, any))\n\nbase_jilin <- st_crop(neighbors, jilin_expanded)\n\njilin_city <- city %>%\n    filter(省级 == \"吉林省\") %>%\n    st_transform(albers_proj)\n\njilin_with_neighbors <- ggplot() +\n    geom_sf(data = province)\n    geom_sf(data = base_jilin, fill = \"white\", color = \"black\") +\n    geom_sf(data = jilin_city) +\n     geom_sf_label_repel(\n        data = jilin_city,\n        aes(label = ENG_NAME),\n        family = \"Proxima\",\n        #fontface = \"bold\",\n        colour = \"#FFFFFF\",\n        fill = \"#555665\",\n        size = 2\n    ) +\n    theme_void()\n\nworld <- ne_countries(scale = \"medium\", returnclass = \"sf\") %>%\n    st_transform(albers_proj)\n\nbounds_proj <- st_transform(sp_bbox, albers_proj)\n\nchina <- ggplot() +\n    geom_sf(data = world, fill = \"white\", color = \"black\") +\n    geom_sf(\n        data = st_transform(country, albers_proj)\n    ) +\n    geom_sf(data = st_transform(province, albers_proj)) +\n    geom_sf(data = jilin, fill = \"red\") +\n    geom_sf(data = jilin_expanded, fill = NA, color = \"green\") +\n    ggthemes::theme_map() +\n    coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax), expand = FALSE) +\n    theme(panel.background = element_rect(fill = \"lightblue\"))\n    \n\nfinal <- china + jilin_with_neighbors + plot_layout(ncol = 2)\n\nggsave(\"test.pdf\", final, dpi = 300)\n```\n\n\n## Pocket Crimes\n\n\"Pocket crimes\" is broadly defined and ambiguously worded that authorities can apply it to almost any activity they deem undesirable. Draw on my [policing data](https://xinzhuo.work/data/penality/), I found that detentions under the pretext of \"picking quarrels and provoking trouble\" are becoming increasingly severe.\n\n```{r}\n#| eval: false\nggplot(data_plot) +\n    geom_point(aes(date, mean, color = group), shape = 19, size = 3) +\n    geom_line(aes(date, mean, color = group), size = 1) +\n    scale_x_date(date_breaks = \"6 month\", date_labels = \"%Y-%m\") +\n    geom_rect(\n        data = tibble(\n            xmin = as.Date(c(\"2018-05-1\")),\n            xmax = as.Date(c(\"2019-11-15\")),\n            ymin = -Inf,\n            ymax = Inf\n        ),\n        aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),\n        fill = \"grey\", alpha = 0.3\n    ) +\n    scale_color_manual(\n        values = colors[c(1, 2)]\n    ) +\n    xlab(\"\") +\n    ylab(\"Average Detention Time (in days)\") +\n    ggthemes::theme_hc(base_size = 15) +\n    guides(\n        # color = guide_legend(title = \"\")\n    ) +\n    geom_hline(yintercept = 4.3, linetype = \"longdash\", color = \"#555555\", size = 1) +\n    geom_label(\n        data = tibble(date = ymd(\"2020-02-01\"), mean = 3.87, label = \"Average detention length \\nfor all charges is 4.3 days\"),\n        aes(date, mean, label = label),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#555555\",\n        fill = \"white\",\n        label.size = NA,\n        size = 4\n    ) +\n    geom_label(\n        data = tibble(date = ymd(\"2018-06-01\"), mean = 7.8, label = \"Prior to the \\nCOVID-19 pandemic\"),\n        aes(date, mean, label = label),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#555555\",\n        fill = NA,\n        alpha = 0.3,\n        label.size = NA,\n        size = 6\n    ) +\n    geom_curve(\n        aes(x = ymd(\"2020-12-01\"), xend = ymd(\"2021-01-14\"), y = 4, yend = 4.3),\n        colour = \"#555555\",\n        size = 0.5,\n        curvature = -0.2,\n        arrow = arrow(length = unit(0.03, \"npc\"))\n    ) +\n    geom_label(\n        aes(x = ymd(\"2021-02-01\"), y = 7.2, label = \"Picking Quarrels and Provoking Trouble\"),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#edae49\",\n        fill = \"white\",\n        alpha = 0.3,\n        label.size = NA,\n        size = 6\n    ) +\n    geom_label(\n        aes(x = ymd(\"2021-02-01\"), y = 5.5, label = \"Disrupt Order in a Public Place\"),\n        family = \"Proxima\",\n        hjust = 0,\n        vjust = 0.5,\n        lineheight = 0.8,\n        colour = \"#1380A1\",\n        fill = \"white\",\n        alpha = 0.3,\n        label.size = NA,\n        size = 6\n    ) +\n    theme(\n        legend.position = \"none\",\n        axis.text = element_text(\n            family = \"Proxima Head\",\n            color = \"#555665\",\n            size = 15\n        ),\n        axis.title.y = element_text(\n            family = \"Proxima Head\",\n        ),\n        legend.text = element_text(family = \"Proxima Head\")\n    )\n```\n\n![](png/detention.png)\n\n<br>\n<br>\n\n```{r}\n#| echo: false\n#| eval: false\nrequire(\"pacman\")\np_load(palmerpenguins, tidyverse, reactablefmtr, BiocManager, dataui, htmltools, reactable, jsonlite, anomalize, tippy, plotly)\n\ntheme <- reactableTheme(\n    headerStyle = list(\n      \"&:hover[aria-sort]\" = list(background = \"hsl(0, 0%, 96%)\"),\n      \"&[aria-sort='ascending'], &[aria-sort='descending']\" = list(background = \"hsl(0, 0%, 96%)\"),\n      borderColor = \"#555\"\n  )\n)\n```\n\n<br>\n\n## Trending Topics\nWe have recorded every minute of hotness data for over 400,000 hot searches appearing on China's Weibo (akin to Twitter) trending list (100 million data points). Let's take a look at how does an authoritarian government react when news unfavorable to it appears on trending lists.\n\n```{r}\n#| eval: false\ndata <- read_rds(\"E:\\\\OneDrive - HKUST Connect\\\\weibohot\\\\河南_乌鲁木齐.Rds\") %>%\n    mutate(`start time` = as.POSIXct(start_time, origin = \"1970-01-01\") |> format(\"%Y-%m-%d %H:%M:%S\")) %>%\n    unnest(trend) %>%\n    group_nest(title, `trending score`, `start time`, file) %>%\n    mutate(\n        data = map(data, ~ arrange(., time)),\n        trend = map(data, ~ pull(., star))\n    ) %>%\n    select(-data) %>%\n    arrange(-`trending score`) %>%\n    mutate(\n        users = map(file, ~ pluck(., 1) |>\n            fromJSON() |>\n            pluck(\"data\", \"media_info\", \"users\")),\n        users = map(users, ~ select(., name, location, verified))\n    )\n\nusers <- data %>%\n    select(users, title) %>%\n    unnest()\n\nreactable(\n    select(data, -file, -users),\n    searchable = TRUE,\n    theme = nytimes(),\n    columns = list(\n        title = colDef(maxWidth = 90, vAlign = \"center\"),\n        `trending score` = colDef(maxWidth = 80, vAlign = \"center\"),\n        `start time` = colDef(maxWidth = 120, vAlign = \"center\"),\n        trend = colDef(\n            minWidth = 150,\n            cell = react_sparkline(\n                data,\n                labels = c(\"max\"),\n                highlight_points = highlight_points(max = \"red\"),\n                height = 80,\n                statline = \"mean\",\n                tooltip_type = 2\n            )\n        )\n    ),\n    details = colDef(\n        name = \"top media\",\n        minWidth = 80,\n        details = function(index) {\n            users <- users[users$title == data$title[index], ]\n\n            htmltools::div(\n                style = \"padding: 1rem\",\n                reactable(users, outlined = TRUE)\n            )\n        }\n    )\n)\n```\n\n```{r}\n#| echo: false\nread_rds(\"E:/OneDrive - HKUST Connect/personal website/main/visualization/data/table_weibo.Rds\")\n```\n<br>\n<br>\n\n## Divided World\nPerceptions of the United States and China in value surveys. Data comes from a [report by Centre for the Future of Democracy](https://www.bennettinstitute.cam.ac.uk/publications/a-world-divided/).\n\n```{r}\n#| eval: false\nsurvey_crack <- ggplot(\n    data_2,\n    aes(\n        `pro China`,\n        `pro USA`, ,\n        color = label,\n        size = frequency,\n        label = country_name\n    )\n) +\n    geom_point(\n        alpha = 0.64, stroke = 2\n    ) +\n    scale_color_manual(values = c(\"#d1495b\", \"#5f9ea0\"), labels = c(\"Positive View of China\", \"Positive View of the United States\")) +\n    scale_size_continuous(range = c(2, 49)) +\n    geom_abline(slope = 1, intercept = 0, size = 1.6, linetype = \"dashed\", colour = \"#ffffff\") +\n    geom_text_repel(\n        color = \"#333333\",\n        box.padding = unit(1, \"lines\"),\n        segment.size = 0.25,\n        size = 15,\n        family = \"techmono\"\n    ) +\n    theme_minimal() +\n    scale_y_continuous(position = \"right\") +\n    theme(\n        text = element_text(family = \"heebo\"),\n        legend.position = \"bottom\",\n        plot.margin = margin(t = 0, r = 5, b = 8, l = 0, unit = \"pt\"),\n        plot.background = element_rect(fill = \"#E0E0E0\", color = NA),\n        axis.title = element_blank(),\n        axis.text = element_text(size = 20, color = \"#555665\", family = \"Proxima Head\"),\n        legend.title = element_blank(),\n        legend.text = element_text(size = 25, color = \"#555665\", family = \"Proxima Head\"),\n        legend.justification = c(\"center\")\n    ) +\n    guides(\n        size = \"none\",\n        guide_legend(title = \"none\"),\n        color = guide_legend(reverse = TRUE, nrow = 2)\n    )\n\nsurvey_crack <- ggdraw() +\n    draw_plot(survey_crack) +\n    draw_image(\"china_us_30.png\", x = 0.11, y = -0.25, width = 0.4, scale = 0.89)\n```\n\n![](png/survey_crack_tets.png)\n\n```{r}\n#| eval: false\nggplot(\n    worldtilegrid,\n    aes(xmin = x, ymin = y, xmax = x + 1, ymax = y + 1, fill = label)\n) +\n    geom_rect(color = \"#ffffff\", size = 0.1) +\n    geom_text(\n        aes(x = x, y = y, label = alpha.3),\n        color = \"#555665\",\n        nudge_x = 0.5,\n        nudge_y = -0.5,\n        size = 10,\n        family = \"Proxima Head\",\n        filter(worldtilegrid, label == \"pro china\")\n    ) +\n    geom_rect_pattern(\n        data = filter(worldtilegrid, alpha.3 == \"CHN\"),\n        pattern_filename = \"https://upload.wikimedia.org/wikipedia/commons/f/fa/Flag_of_the_People%27s_Republic_of_China.svg\",\n        pattern = \"image\",\n        pattern_type = \"squish\"\n    ) +\n    geom_rect_pattern(\n        data = filter(worldtilegrid, alpha.3 == \"USA\"),\n        pattern_filename = \"https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/1920px-Flag_of_the_United_States.svg.png\",\n        pattern = \"image\",\n        pattern_type = \"squish\"\n    ) +\n    geom_text(\n        aes(x = x, y = y, label = alpha.3),\n        color = \"#E0E0E0\",\n        nudge_x = 0.5,\n        nudge_y = -0.5,\n        size = 10,\n        family = \"Proxima Head\",\n        filter(worldtilegrid, label == \"not pro china\" & alpha.3 != \"USA\")\n    ) +\n    geom_rect_pattern(\n        data = filter(worldtilegrid, is.na(label)),\n        fill = \"#ffffff\",\n        colour = \"#a9a9a9\",\n        pattern_density = 0.45,\n        pattern_fill = \"#a9a9a9\",\n        pattern_colour = \"#ffffff\"\n    ) +\n    scale_y_reverse() +\n    theme_minimal() +\n    theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        axis.title = element_blank(),\n        legend.position = \"none\",\n        legend.text = element_text(family = \"Proxima Head\"),\n        legend.title = element_blank(),\n        legend.key.width = unit(0.5, \"cm\"),\n        plot.background = element_rect(fill = \"#E0E0E0\", color = NA)\n    ) +\n    scale_fill_manual(values = c(\"#2e4057\", \"#edae49\"), labels = c(\"not pro China\", \"pro China\")) +\n    annotate(\"text\",\n        x = 6, y = c(19, 20, 21),\n        label = c(\"pro China\", \"not pro China\", \"not included\"),\n        size = 12, hjust = 0,\n        family = \"Proxima\", color = c(\"#edae49\", \"#2e4057\", \"#a9a9a9\")\n    ) +\n    annotate(\"point\", x = 5.7, y = c(19.05, 20.05, 21.05), pch = c(15, 15, 15), size = 4, color = c(\"#edae49\", \"#2e4057\", \"#a9a9a9\"))\n```\n\n![](png/survey_index_revised.png)"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"kable","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../scss/styles.css"],"highlight-style":"gruvbox","toc":true,"toc-depth":3,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","preview":{"port":5555,"browser":true,"watch-inputs":true,"navigate":true},"bibliography":["../bib/references.bib"],"csl":"../bib/chicago-author-date.csl","knitr":{"opts_chunk":{"warning":false,"message":false,"error":false}},"code-annotations":"hover","editor":"visual","theme":{"light":["flatly","../scss/light.scss"],"dark":["darkly","../scss/dark.scss"]},"author":[{"name":"Xinzhuo Huang","orcid":"0009-0007-6448-5114","email":"xhuangcb@connect.ust.hk","affiliations":[{"name":"HKUST SOSC"}]}],"smooth-scroll":true,"code-block-bg":"#f5f5f5","code-block-border-left":"#E0E0E0","date-modified":"last-modified","toc-location":"right","link-citations":"yes","comments":false,"page-layout":"full","title":"Visualization","subtitle":"With data from the real world","citation":{"author":"Huang Xinzhuo"},"date":"Nov 21, 2023"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}